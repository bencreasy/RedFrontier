CONTRACT_TYPE
{
    //name = SolarPanelTest
   // title = Solar Panel Detection Test
    
    description = Test contract to determine the best way to detect solar panels on spacecraft.\n\nThis contract tests multiple methods for detecting solar panels without specifying exact part names.
    
    synopsis = Launch a spacecraft with solar panels and test various detection methods.
    
    completedMessage = Solar panel detection test completed! Check which parameters were satisfied to determine the best detection method.
    
    // Contract parameters
    agent = Lowne Aerospace
    group = RedFrontier
    
    // Contract requirements
    minExpiry = 1460
    maxExpiry = 1460
    deadline = 365
    cancellable = true
    declinable = true
    autoAccept = false
    prestige = Trivial
   // maxCompletions = 1
    maxSimultaneous = 1
    
    
    // Rewards
    advanceFunds = 10000.0
    rewardFunds = 20000.0
    rewardScience = 50.0
    rewardReputation = 5.0
    
    // Target Body
    targetBody = Kerbin
    
    // Main test vessel
    PARAMETER
    {
        name = TestVessel
        type = VesselParameterGroup
        title = Deploy Solar Panel Test Vehicle
        
        define = Solar Panel Test Craft
        
        PARAMETER
        {
            name = TestOrbit
            type = Orbit
            targetBody = Kerbin
            minAltitude = 80000
            maxAltitude = 200000
        }
        
        // Test Method 1: ModuleDeployableSolarPanel
        PARAMETER
        {
            name = Method1_DeployableSolarPanel
            type = PartValidation
            partModule = ModuleDeployableSolarPanel
            minCount = 1
            title = Method 1: ModuleDeployableSolarPanel
            optional = true
        }
        
        // Test Method 2: ModuleGenerator
        PARAMETER
        {
            name = Method2_ModuleGenerator
            type = PartValidation
            partModule = ModuleGenerator
            minCount = 1
            title = Method 2: ModuleGenerator
            optional = true
        }
        
        
        // Test Method 4: Resource ElectricCharge production
        PARAMETER
        {
            name = Method4_ElectricCharge
            type = HasResource
            resource = ElectricCharge
            minQuantity = 50.0
            title = Method 4: Has ElectricCharge (50+ units)
            optional = true
        }
        
        // Test Method 5: Part category
        PARAMETER
        {
            name = Method5_PartCategory
            type = PartValidation
            category = Electrical
            minCount = 1
            title = Method 5: Part from Electrical category
            optional = true
        }
        
        // Test Method 6: Part with "solar" in name
        PARAMETER
        {
            name = Method6_SolarInName
            type = PartValidation
            part = solarPanels1
            part = solarPanels2
            part = solarPanels3
            part = solarPanels4
            part = solarPanels5
            minCount = 1
            title = Method 6: Common solar panel parts
            optional = true
        }
        
        // Test Method 7: Resource capacity check
        PARAMETER
        {
            name = Method7_ElectricCapacity
            type = HasResourceCapacity
            resource = ElectricCharge
            minQuantity = 10.0
            title = Method 7: ElectricCharge capacity (10+ units)
            optional = true
        }
        
        // Test Method 8: Multiple module types (Any)
        PARAMETER
        {
            name = Method8_AnyPowerModule
            type = Any
            title = Method 8: Any power generation module
            optional = true
            
            PARAMETER
            {
                name = HasDeployableSolar
                type = PartValidation
                partModule = ModuleDeployableSolarPanel
                minCount = 1
            }
            
            PARAMETER
            {
                name = HasGenerator
                type = PartValidation
                partModule = ModuleGenerator
                minCount = 1
            }
            
            
            PARAMETER
            {
                name = HasReactor
                type = PartValidation
                partModule = ModuleResourceConverter
                minCount = 1
            }
        }
        
        // Test Method 9: Check for specific solar panel parts by name
        PARAMETER
        {
            name = Method9_SpecificParts
            type = Any
            title = Method 9: Specific solar panel part names
            optional = true
            
            PARAMETER
            {
                name = SmallSolar
                type = PartValidation
                part = solarPanels5
                minCount = 1
                title = OX-STAT Photovoltaic Panels
            }
            
            PARAMETER
            {
                name = MediumSolar
                type = PartValidation
                part = solarPanels1
                minCount = 1
                title = OX-4W 3x2 Photovoltaic Panels
            }
            
            PARAMETER
            {
                name = LargeSolar
                type = PartValidation
                part = solarPanels2
                minCount = 1
                title = SP-W 3x2 Photovoltaic Panels
            }
            
            PARAMETER
            {
                name = GiganticSolar
                type = PartValidation
                part = solarPanels3
                minCount = 1
                title = SP-L 1x6 Photovoltaic Panels
            }
        }
    }  
}